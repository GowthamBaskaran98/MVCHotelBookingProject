@model IEnumerable<OnlineHotelBookingApplication.Models.HotelRoomCategoryViewModel>
@{
    ViewBag.Title = "AddHotelRoomCategory";
}

@if (TempData["HotelId"] != null)
{
    TempData.Keep("HotelId");
}

<meta charset="utf-8">
<title>Chris Stanyon</title>

<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

<script src="//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/minified/jquery-ui.min.css")" rel="stylesheet" />
<!-- Required jQuery and jQuery UI Javascript references -->
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.10.4.min.js")"></script>

<!-- Examples of creating a Datepicker -->
<script type="text/javascript">
    $(document).ready(function () {
        $('.dateTo').datepicker({
            dateFormat: 'd MM yy'
        });

        $('.dateFrom').datepicker({
            dateFormat: 'd MM yy',
            onSelect: function () {
                //Get the selected data
                var selectedDate = $(this).datepicker('getDate');
                // Add 10 days to it
                selectedDate.setDate(selectedDate.getDate() + 1);
                // Set the DateTo Date
                $('.dateTo').datepicker('setDate', selectedDate);
            }
        });
    });
</script>

<div class="main">


    <table>
        <tr>
            <td>
                <label for="dateFrom" style="display:block">CheckIn :</label>
                @*<input type="text" id="dateFrom">*@
                @*    <input class="date-picker" />*@
                @* @Html.TextBoxFor(model => model.TimingViewModel.CheckIn, "", new { @class = "dateFrom" })*@
                @ViewBag.CheckIn
            </td>
            <td>
                <label for="dateTo" style="display:block">CheckOut :</label>
                @*  <input type="text" id="dateTo">*@
                @*<input class="date-picker" />*@
                @*@Html.TextBoxFor(model => model.TimingViewModel.CheckOut, "", new { @class = "dateTo" })*@
                @ViewBag.CheckOut
            </td>
        </tr>
    </table>

        <div>
            @{
                var base64 = Convert.ToBase64String(Model.First().HotelDatabase.HotelImage);
                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
            }
        </div>
        <div class="row">
            <div class="column_one">
                <img src="@imgSrc" class="HotelImage" />
            </div>
            <div class="column_two">
                <div style="font-size:50px;color:royalblue">@Model.First().HotelDatabase.HotelName</div>
                <hr />
                <div>@Model.First().HotelDatabase.Description</div>
                <div>@Model.First().HotelDatabase.Street</div>
                <div>@Model.First().HotelDatabase.City</div>
                <div>@Model.First().HotelDatabase.State</div>
            </div>
        </div>
    }
    <table border="1">
        <tr>
            <th>ROOM TYPE</th>
            <th>GUEST PER ROOM</th>
            @*<th>INCLUDED IN PRICE</th>*@
            <th>COST PER NIGHT</th>
        </tr>
        @foreach (var user in Model)
        {
            <tr>
                <td>@user.RoomCategories.RoomType</td>
                <td>@user.AdultsPerRoom</td>
                <td>@user.Cost</td>
                @if (ViewContext.HttpContext.User.IsInRole("Admin"))
                {
                    <td>
                        @Html.ActionLink("Edit", "EditRoomType", new { HotelRoomId = user.HotelRoomId, HotelId = user.HotelId, RoomId = user.RoomId, AdultsPerRoom = user.AdultsPerRoom, TotalRooms = user.TotalRooms, BookedRooms = user.BookedRooms, VacantRooms = user.VacantRooms, Cost = user.Cost })
                        @Html.ActionLink("Delete", "DeleteRoomType", new { HotelRoomId = user.HotelRoomId })
                        @Html.ActionLink("Book Hotel", "BookHotel", new { HotelRoomId = user.HotelRoomId, HotelId = user.HotelId, RoomId = user.RoomId, AdultsPerRoom = user.AdultsPerRoom, TotalRooms = user.TotalRooms, BookedRooms = user.BookedRooms, VacantRooms = user.VacantRooms, Cost = user.Cost })
                    </td>
                }
                else
                {
                    <td>
                        @Html.ActionLink("Book Hotel", "BookHotel", new { HotelRoomId = user.HotelRoomId, HotelId = user.HotelId, RoomId = user.RoomId, AdultsPerRoom = user.AdultsPerRoom, TotalRooms = user.TotalRooms, BookedRooms = user.BookedRooms, VacantRooms = user.VacantRooms, Cost = user.Cost })
                    </td>
                }
            </tr>
        }
        @if (ViewContext.HttpContext.User.IsInRole("Admin") || (Model.First().HotelDatabase.HotelOwner == User.Identity.Name))
        {
            <tr>
                @Html.ActionLink("Add Another Room Type", "AddRoomCategory", new { code = TempData["HotelId"] })
            </tr>
            <tr>
                @Html.ActionLink("SaveType", "ManageHotel")
            </tr>
        }
    </table>
</div>

