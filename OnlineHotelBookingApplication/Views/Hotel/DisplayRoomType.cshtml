@model OnlineHotelBookingApplication.Models.HotelTimingViewModel
@{
    ViewBag.Title = "AddHotelRoomCategory";
    AjaxOptions options = new AjaxOptions
    {
        UpdateTargetId = "searchResult",
        Confirm = "Are you sure to start search?",
        InsertionMode = InsertionMode.Replace,
        LoadingElementId = "divLoading"
    };
}

@if (TempData["Hotel"] != null)
{
    TempData.Keep("Hotel");
}
@if (TempData["CheckIn"] != null && TempData["CheckOut"] != null)
{
    TempData.Keep("CheckIn");
    TempData.Keep("CheckOut");
}

<meta charset="utf-8">
<title>Chris Stanyon</title>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="//ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js" type="text/javascript"></script>
<link href="@Url.Content("~/Content/themes/base/minified/jquery-ui.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")"></script>
<script src="@Url.Content("~/Scripts/jquery-ui-1.10.4.min.js")"></script>
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script type="text/javascript">
    $(document).ready(function () {
        $('.dateTo').datepicker({
            dateFormat: 'd MM yy'
        });

        $('.dateFrom').datepicker({
            dateFormat: 'd MM yy',
            onSelect: function () {
                var selectedDate = $(this).datepicker('getDate');
                selectedDate.setDate(selectedDate.getDate() + 1);
                $('.dateTo').datepicker('setDate', selectedDate);
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        $('input[id$=dateFrom]').datepicker({});
    });
</script>

<div class="main">
    <table>
        <tr>
            <td>
                @using (Ajax.BeginForm("SearchPeople", options))
                {
                    if (null != TempData["alertMessage"])
                    {
                        <script type="text/javascript">
                            alert("@TempData["alertMessage"]");
                        </script>
                    }

                    <div id="divLoading" style="color: red; width: 200px; background-color: yellow; display: none; position: absolute;">
                        Loading ....
                    </div>
                    <div>
                        @Html.TextBox("keyword")
                        <button type="submit">Search</button>
                    </div>
                }
            </td>
            @using (Html.BeginForm("DisplayRoomType", "Hotel", new { Hotel = ViewBag.Hotel }, FormMethod.Post))
            {
                <td>
                    <label for="dateFrom" style="display:block">CheckIn :</label>
                    @Html.TextBoxFor(model => model.TimingViewModel.CheckIn, "", new { @class = "dateFrom" })
                </td>
                <td>
                    <label for="dateTo" style="display:block">CheckOut :</label>
                    @Html.TextBoxFor(model => model.TimingViewModel.CheckOut, "", new { @class = "dateFrom" })
                </td>

                <td>
                    <input type="submit" value="Confirm" />
                </td>
            }
        </tr>
    </table>

    @if (User.Identity.Name == Model.HotelViewModel.HotelOwner)
    {
        @Html.ActionLink("AddRoomCategory", "Hotel")
    }

    <div class="hotellist">
        <div>
            @{
                var base64 = Convert.ToBase64String(Model.HotelViewModel.HotelImage);
                var imgSrc = String.Format("data:image/gif;base64,{0}", base64);
            }
        </div>
        <div class="row">
            <div class="column_one">
                <img src="@imgSrc" class="HotelImage" />
            </div>
            <div class="column_four">
                <div style="font-size:50px;color:royalblue">@Model.HotelViewModel.HotelName</div>
                <hr />
                <div>@Model.HotelViewModel.Description</div>
                <div>@Model.HotelViewModel.Street</div>
                <div>@Model.HotelViewModel.City</div>
                <div>@Model.HotelViewModel.State</div>
            </div>
        </div>
    </div>
    <br />
    <br />
    <div class="hotellist">
        @foreach (var user in Model.HotelRoomCategoryViewModels)
        {
            <div class="hotellist">
                <div>
                    @{
                        var bases = Convert.ToBase64String(Model.HotelRoomCategoryViewModels.First().RoomImage);
                        var img = String.Format("data:image/gif;base64,{0}", bases);
                    }
                </div>
                <div class="row">
                    <div class="column_one">
                        <img src="@img" class="HotelImage" />
                    </div>
                    <div class="column_two">
                        <p>Room Type : </p>
                        <div style="font-size:50px;color:royalblue">@user.RoomCategories.RoomType</div>
                        <hr />
                        <div>Adults Per Room : @user.AdultsPerRoom</div>
                        <div>Available Rooms : @user.AvailableRooms</div>
                        <div class="form-group">
                            @if (user.AvailableRooms != 0)
                            {
                                <div>@user.AvailableRooms  Rooms left</div>
                                <div class="col-md-10">
                                    @Html.DropDownListFor(Model => Model.HotelRoomCategoryViewModel.AvailableRooms, Enumerable.Range(0, user.AvailableRooms + 1).Select(i => new SelectListItem { Text = i.ToString(), Value = i.ToString() }), new { @onChange = "selectedText(this)" })
                                    @Html.ValidationMessageFor(Model => Model.HotelRoomCategoryViewModel.AvailableRooms)
                                </div>
                            }
                        </div>
                        <div>Cost : @user.Cost</div>
                    </div>
                    <div class="column_three">
                        <div class="verticalLine">
                            @if (@Model.HotelViewModel.HotelOwner == User.Identity.Name)
                            {
                                @Html.ActionLink("Edit", "EditRoomType", new { HotelRoomId = user.HotelRoomId, HotelId = user.HotelId, RoomId = user.RoomId, AdultsPerRoom = user.AdultsPerRoom, RoomType = user.RoomCategories.RoomType, TotalRooms = user.TotalRooms, Cost = user.Cost, })
                                @Html.ActionLink("Delete", "DeleteRoomType", new { HotelRoomId = user.HotelRoomId })
                                @Html.ActionLink("Book Hotel", "BookHotel", new { HotelRoomId = user.HotelRoomId, HotelId = user.HotelId, RoomId = user.RoomId, AdultsPerRoom = user.AdultsPerRoom, RoomType = user.RoomCategories.RoomType, TotalRooms = user.TotalRooms, Cost = user.Cost })
                            }
                            else
                            {
                                @Html.ActionLink("Book Hotel", "BookHotel", new { HotelRoomId = user.HotelRoomId, HotelId = user.HotelId, RoomId = user.RoomId, AdultsPerRoom = user.AdultsPerRoom, RoomType = user.RoomCategories.RoomType, TotalRooms = user.TotalRooms, Cost = user.Cost })
                            }
                        </div>
                    </div>
                </div>
            </div>
                        }
    </div>
    </div>